{
    "version": "0.2.0",
    "configurations": [
      {
        "name": "Run etcd",
        "type": "go",
        "request": "launch",
        "mode": "exec",
        "program": "/usr/local/bin/etcd",
        "args": [],
        "env": {
          "GO111MODULE": "on"
        },
        "cwd": "${workspaceFolder}"
      },
      {
        "preLaunchTask": "start-etcd",
        "name": "Debug kube-apiserver",
        "type": "go",
        "request": "launch",
        "mode": "debug",
        "program": "${workspaceFolder}/cmd/kube-apiserver/apiserver.go",
        "args": [
          "--etcd-servers=http://127.0.0.1:2379",
          "--authorization-mode=Node,RBAC",
          "--authorization-webhook-config-file=",
          "--authentication-token-webhook-config-file=",
          "--cloud-provider=",
          "--cloud-config=",
          "--v=3",
          "--vmodule=",
          "--audit-policy-file=/tmp/local-up-cluster.sh.qEgQ9B/kube-audit-policy-file",
          "--audit-log-path=/tmp/kube-apiserver-audit.log",
          "--cert-dir=/var/run/kubernetes",
          "--egress-selector-config-file=/tmp/local-up-cluster.sh.qEgQ9B/kube_egress_selector_configuration.yaml",
          "--client-ca-file=/var/run/kubernetes/client-ca.crt",
          "--kubelet-client-certificate=/var/run/kubernetes/client-kube-apiserver.crt",
          "--kubelet-client-key=/var/run/kubernetes/client-kube-apiserver.key",
          "--service-account-key-file=/tmp/local-up-cluster.sh.qEgQ9B/kube-serviceaccount.key",
          "--service-account-lookup=true",
          "--service-account-issuer=https://kubernetes.default.svc",
          "--service-account-jwks-uri=https://kubernetes.default.svc/openid/v1/jwks",
          "--service-account-signing-key-file=/tmp/local-up-cluster.sh.qEgQ9B/kube-serviceaccount.key",
          "--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,Priority,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,NodeRestriction",
          "--disable-admission-plugins=",
          "--admission-control-config-file=",
          "--bind-address=0.0.0.0",
          "--secure-port=6443",
          "--tls-cert-file=/var/run/kubernetes/serving-kube-apiserver.crt",
          "--tls-private-key-file=/var/run/kubernetes/serving-kube-apiserver.key",
          "--storage-backend=etcd3",
          "--storage-media-type=application/vnd.kubernetes.protobuf",
          "--service-cluster-ip-range=10.0.0.0/24",
          "--feature-gates=AllAlpha=false",
          "--external-hostname=localhost",
          "--requestheader-username-headers=X-Remote-User",
          "--requestheader-group-headers=X-Remote-Group",
          "--requestheader-extra-headers-prefix=X-Remote-Extra-",
          "--requestheader-client-ca-file=/var/run/kubernetes/request-header-ca.crt",
          "--requestheader-allowed-names=system:auth-proxy",
          "--proxy-client-cert-file=/var/run/kubernetes/client-auth-proxy.crt",
          "--proxy-client-key-file=/var/run/kubernetes/client-auth-proxy.key",
          "--cors-allowed-origins=/127.0.0.1(:[0-9]+)?$,/localhost(:[0-9]+)?$"
        ],
        "env": {
          "GO111MODULE": "on"
        },
        "buildFlags": "",
        "cwd": "${workspaceFolder}"
      },
      {
        "name": "Debug kube-controller-manager",
        "type": "go",
        "request": "launch",
        "mode": "debug",
        "program": "${workspaceFolder}/cmd/kube-controller-manager/controller-manager.go",
        "args": [
          "--v=3",
          "--service-account-private-key-file=/tmp/local-up-cluster.sh.qEgQ9B/kube-serviceaccount.key",
          "--service-cluster-ip-range=10.0.0.0/24",
          "--root-ca-file=/var/run/kubernetes/server-ca.crt",
          "--cluster-signing-cert-file=/var/run/kubernetes/client-ca.crt",
          "--cluster-signing-key-file=/var/run/kubernetes/client-ca.key",
          "--enable-hostpath-provisioner=false",
          "--pvclaimbinder-sync-period=15s",
          "--feature-gates=AllAlpha=false",
          "--authentication-kubeconfig=/var/run/kubernetes/controller.kubeconfig",
          "--authorization-kubeconfig=/var/run/kubernetes/controller.kubeconfig",
          "--kubeconfig=/var/run/kubernetes/controller.kubeconfig",
          "--use-service-account-credentials",
          "--controllers=*",
          "--leader-elect=false",
  //        "--cert-dir=/var/run/kubernetes",
          "--master=https://localhost:6443"
        ],
        "env": {
          "GO111MODULE": "on"
        },
        "buildFlags": "",
        "cwd": "${workspaceFolder}"
      },
      {
        "name": "Debug kube-scheduler",
        "type": "go",
        "request": "launch",
        "mode": "debug",
        "program": "${workspaceFolder}/cmd/kube-scheduler/scheduler.go",
        "args": [
          "--v=3",
          "--config=/tmp/local-up-cluster.sh.qEgQ9B/kube-scheduler.yaml",
          "--feature-gates=AllAlpha=false",
          "--authentication-kubeconfig=/var/run/kubernetes/scheduler.kubeconfig",
          "--authorization-kubeconfig=/var/run/kubernetes/scheduler.kubeconfig",
          "--master=https://localhost:6443"
        ],
        "env": {
          "GO111MODULE": "on"
        },
        "buildFlags": "",
        "cwd": "${workspaceFolder}"
      },
      {
        "name": "Debug Kubelet",
        "type": "go",
        "request": "launch",
        "mode": "debug",
        "program": "${workspaceFolder}/cmd/kubelet/kubelet.go", 
        "args": [
            "--v=3",
            "--vmodule=",
            "--hostname-override=127.0.0.1",
            "--cloud-provider=",
            "--cloud-config=",
            "--bootstrap-kubeconfig=/var/run/kubernetes/kubelet.kubeconfig",
            "--kubeconfig=/var/run/kubernetes/kubelet-rotated.kubeconfig",
            "--cgroups-per-qos=false",
            "--enforce-node-allocatable=",
            "--config=/tmp/local-up-cluster.sh.qEgQ9B/kubelet.yaml"
        ],
        "env": {
            "GO111MODULE": "on",
        },
        "cwd": "${workspaceFolder}",
        "sudo": true
    }
    ]
  }
  